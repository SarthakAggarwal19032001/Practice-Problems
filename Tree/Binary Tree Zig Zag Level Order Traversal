/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>>flist=new ArrayList<>();
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root==null){
            return flist;
        }
        Queue<TreeNode>queue=new LinkedList<>();
        queue.offer(root);
        int a=-1;
        while(queue.size()!=0){
            int count=queue.size();
            a++;
            List<Integer>list=new ArrayList<>();
            for(int i=0;i<count;i++){
                TreeNode node=queue.poll();
                list.add(node.val);
                if(node.left!=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
            }
            if(a%2!=0){
                Collections.reverse(list);
            }
            flist.add(list);
        }
        return flist;
    }
}
