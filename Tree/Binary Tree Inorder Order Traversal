/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode currnode) {
       TreeNode temp=currnode;
        List<Integer>list=new ArrayList<>();
        Stack<TreeNode>stack=new Stack<>();
        while(temp!=null || !stack.isEmpty()){    //TC- O(N)
            while(temp!=null){
                stack.push(temp);
                temp=temp.left;
            }
            temp=stack.pop();
            list.add(temp.val);
            temp=temp.right; 
    }
        return list;
}
}
