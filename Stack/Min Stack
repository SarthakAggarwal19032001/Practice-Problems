class MinStack {
    Stack<Integer>stack;
    int min;
    public MinStack() {
        stack=new Stack<>();
        min=0;
    }
    
    public void push(int element) {
        if(stack.isEmpty()){
        min=element;
        stack.push(element);
            return;
       }
        if(element<=Integer.MIN_VALUE){
            stack.push(Integer.MIN_VALUE);
            min=element;
            return;
        }
       if(element<min){
           stack.push(2*element-min);
        min=element;
       }
       else{
        stack.push(element);
       }
    }
    
    public void pop() {
        int element=stack.pop();
        if(element==Integer.MIN_VALUE){
            min=stack.peek();
            return;
        }
        if(element<min){
            min=2*min-element;
        }
    }
    public int top() {
        int element=stack.peek();
        if(element<=min){
            return min;
        }
        return element;
    }
    
    public int getMin() {
        return min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */

